worker_processes auto;
# Move this to `/tmp` so we can run as non-privileged `nginx` user.
pid              /tmp/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include           mime.types;
    proxy_cache_path  /tmp/contentcache keys_zone=contentcache:10m; # 10m = shared mem.

    server {
        listen              443 ssl;
        keepalive_timeout   70;

        ssl_protocols       TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;
        ssl_ciphers         AES128-SHA:AES256-SHA:RC4-SHA:DES-CBC3-SHA:RC4-MD5;
        ssl_certificate     /usr/local/nginx/conf/fullchain.pem;
        ssl_certificate_key /usr/local/nginx/conf/privkey.pem;
        ssl_session_cache   shared:SSL:10m;
        ssl_session_timeout 10m;

        root                /usr/share/nginx/html;
        proxy_cache         contentcache;
        gzip                on;
        gzip_min_length     1000; # bytes
        gzip_types          text/plain text/css text/javascript;
        sendfile            on;
        sendfile_max_chunk  1m; # bytes

        location / {
            index     index.html;
            try_files $uri $uri/ /index.html;
        }

        location /b/_private {
            index                index.html;
            try_files            $uri $uri/ /index.html;
            auth_basic           "Private Posts";
            auth_basic_user_file /etc/nginx/.htpasswd;
        }
    }

    server {
        listen 80;
        # Redirect all traffic to HTTPS.
        return 301 https://$host$request_uri;
    }

    # Move these to `/tmp` so we can run as non-privileged `nginx` user.
    client_body_temp_path /tmp/client_temp;
    proxy_temp_path       /tmp/proxy_temp_path;
    fastcgi_temp_path     /tmp/fastcgi_temp;
    uwsgi_temp_path       /tmp/uwsgi_temp;
    scgi_temp_path        /tmp/scgi_temp;
}
